{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>census_tra</th>\n",
       "      <th>data_redac</th>\n",
       "      <th>num_bll_5p</th>\n",
       "      <th>num_screen</th>\n",
       "      <th>perc_5plus</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>42101000100</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>POLYGON ((-75.14147213273969 39.9517072267047,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>42101000200</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>109.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((-75.162377698504 39.9576545523082, -...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>42101000300</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>110.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((-75.17820482839041 39.9598134132842,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>42101000401</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((-75.1729917788024 39.9546437050483, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>42101000402</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>POLYGON ((-75.1633313650233 39.9533392100125, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    census_tra  data_redac  num_bll_5p  num_screen  perc_5plus  \\\n",
       "0  42101000100           0         0.0       100.0         0.0   \n",
       "1  42101000200           1         NaN       109.0         NaN   \n",
       "2  42101000300           1         NaN       110.0         NaN   \n",
       "3  42101000401           1         NaN        61.0         NaN   \n",
       "4  42101000402           0         0.0        41.0         0.0   \n",
       "\n",
       "                                            geometry  \n",
       "0  POLYGON ((-75.14147213273969 39.9517072267047,...  \n",
       "1  POLYGON ((-75.162377698504 39.9576545523082, -...  \n",
       "2  POLYGON ((-75.17820482839041 39.9598134132842,...  \n",
       "3  POLYGON ((-75.1729917788024 39.9546437050483, ...  \n",
       "4  POLYGON ((-75.1633313650233 39.9533392100125, ...  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import geopandas as gpd\n",
    "\n",
    "# read the blood lead data\n",
    "blood_lead_shp = 'child_blood_lead_levels_by_ct.shp'\n",
    "blood_lead_gdf = gpd.read_file(blood_lead_shp)\n",
    "\n",
    "# print the first 5 records of the dataframe, used to check the data structure\n",
    "blood_lead_gdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
